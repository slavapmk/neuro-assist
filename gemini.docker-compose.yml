version: "3.8"

services:
#  database:
#    image: postgres:14
#    environment:
#      POSTGRES_DB: "neuro"
#      POSTGRES_USER: "backend"
#      POSTGRES_PASSWORD: "rndfkjsr"
#    ports:
#      - "5432:5432"
#    container_name: "database"
#    healthcheck:
#      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
#      interval: 30s
#      timeout: 5s
#      retries: 30
#    expose:
#      - "5432"
#    volumes:
#      - "./docker/database:/var/lib/postgresql/data/"
#  backend:
#    build: backend
#    environment:
#      POSTGRES_URL: "jdbc:postgresql://database:5432/neuro"
#      POSTGRES_USER: "backend"
#      POSTGRES_PASSWORD: "rndfkjsr"
#    ports:
#      - "8080:8080"
#    container_name: "backend"
#    expose:
#      - "8080"
#    depends_on:
#      database:
#        condition: service_healthy
#    healthcheck:
#      test: curl --fail http://localhost:8080 || exit 1
#      interval: 120s
#      retries: 5
#      timeout: 10s
#      start_period: 60s
#      start_interval: 1s
  gemini_poller:
    build: gemini-poller
    environment:
      API_BASE_URL: "http://host.slavapmk.ru:8080"
      POLLER_ID: "6973c71f-ce3e-4d6b-8b92-f79aa7c58035"
      GEMINI_TOKEN: ""
    container_name: "gemini_poller"
#    depends_on:
#      backend:
#        condition: service_healthy
#  bot:
#    build: bot
#    environment:
#      API_BASE_URL: "http://backend:8080"
#      TOKEN: ""
#    container_name: "bot"
#    depends_on:
#      backend:
#        condition: service_healthy
